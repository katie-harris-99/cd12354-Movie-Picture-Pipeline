name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

defaults:
  run:
    working-directory: frontend

env:
  REACT_APP_MOVIE_API_URL: 'http://localhost:5000'

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4
      
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run lint
        run: npm run lint

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4
      
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test

  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4
      
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build docker image
        run: docker build --build-arg=${{ env.REACT_APP_MOVIE_API_URL }} --tag=mp-frontend:latest .
      
      - name: Run docker container
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend
