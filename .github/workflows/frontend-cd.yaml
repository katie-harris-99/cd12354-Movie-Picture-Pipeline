name: Frontend Continuous Deployment
on:
  workflow_dispatch:
  push:
    branches:
        - main
    paths:
      - 'frontend/**'
    
env:
  NODE_VERSION: '18.x'

jobs:
  Lint:
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: frontend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: "frontend/package-lock.json"
        
    - name: Install Dependencies
      run: npm ci

    - name: Run Lint
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: frontend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: "frontend/package-lock.json"
    
    - name: Install Dependencies
      run: npm ci
        
    - name: Run Tests
      run: npm run test 

  Deploy:
    rneeds: [Linting, Test]
    needs:
      - lint
      - test
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
      working-directory: frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.BACKEND_URL }} --tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA} .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Deply image to eks
        run: |
          cd frontend/k8s
          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
          kustomize build | kubectl apply -f -
      
      - name: Display application URLs        
        run: |
          kubectl get svc -A
